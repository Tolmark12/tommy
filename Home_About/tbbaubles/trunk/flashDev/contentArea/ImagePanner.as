import mx.transitions.Tween;import mx.transitions.easing.*;class contentArea.ImagePanner{	var panSpace:MovieClip;	private var loopInterval:Number;	private var panSpeed:Number;	private static var startX:Number = 2;	private static var startY:Number = 4;	private var _displayTime:Number  = 5900;		public function ImagePanner( $maskMc:MovieClip )	{		panSpeed = 420;		panSpace = $maskMc;	}			function panMc( $mc:MovieClip, $panMode, $cbObj, $cbFunc )	{		var nam = $mc._name;		this[nam + 'x'].stop();		this[nam + 'y'].stop();				$mc._x = startX;		$mc._y = startY;				clearInterval( loopInterval );		loopInterval = setInterval(function($cbObj, $cbFunc)		{			$cbObj[$cbFunc]();		}, _displayTime, $cbObj, $cbFunc)						switch($panMode)		{			case "rl":			this[nam + 'x'] = new Tween( $mc, "_x", None.easeIn, startX - ($mc._width - panSpace._width), startX, panSpeed, false);			break						case "lr":			this[nam + 'x']  = new Tween( $mc, "_x", None.easeIn, startX, startX - ($mc._width - panSpace._width), panSpeed, false);			break						case "tb":			this[nam + 'y']  = new Tween( $mc, "_y", None.easeIn, startY, startY - ($mc._height - panSpace._height) , panSpeed, false);			break						case "bt":			this[nam + 'y']  = new Tween( $mc, "_y", None.easeIn, startY - ($mc._height - panSpace._height), startY , panSpeed, false);			break						default :					}	}		public function setDisplayTime ( $displayTime:Number ):Void	{		_displayTime = $displayTime * 1000;	}}