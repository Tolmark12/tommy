import contentArea.Contentimport InteractiveContent;import PathFinder;class Doc_home extends Doc_BASE{	private var contentCon:Content;	private var interactiveCon:InteractiveContent;	private var navMc:MovieClip;	private var introSound:Sound;		public function Doc_home( $rootMc:MovieClip )	{		super( $rootMc );				//hint.Interface.activateHint(this);				// Init the various movie clips and set their respective depths		rootMc.baubleHolder.swapDepths(5011);		rootMc.photoFrame.swapDepths(5010);		rootMc.photoFrame._visible = false;				var altBaubleMc:MovieClip = rootMc.createEmptyMovieClip( 'altBaubleMc', 5009 );				// Control for managing the text and the images		contentCon = new Content( rootMc.photoFrame, rootMc.textMc, PathFinder.getImagePath() );				// Inits the Side nav and the baubles		interactiveCon = new InteractiveContent( null, rootMc.baubleHolder, altBaubleMc, this );	}		public function xmlLoaded ( $xmlObj:Object ):Void	{		super.xmlLoaded( $xmlObj );		interactiveCon.setXmlInfo( $xmlObj, navMc );		contentCon.setImageBoxSize( Number($xmlObj.globals.imageBoxWidth  + 20),			 						Number($xmlObj.globals.imageBoxHeight + 20) );		// Load the default images		contentCon.loadImages($xmlObj.globals)		/*		var mp3:String = $xmlObj.globals.mp3;		if( mp3 != undefined )		{			var sound:Sound = new Sound( super.rootMc );			sound.loadSound( PathFinder.getMp3Path() + mp3 , false);			sound.onLoad = function()			{				this.start();			}		}*/	}		// Send list of mask mcs to the bauble control	// Called from the stage	public function registerBaubleMasks ( $ar:Array ):Void	{		interactiveCon.registerBaubleMasks( $ar )	}		public function getRootMc ():MovieClip { return rootMc; };}