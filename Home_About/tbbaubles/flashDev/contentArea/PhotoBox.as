import mx.transitions.Tween;import mx.transitions.easing.*;import contentArea.ImagePanner;import Loading.ImageLoaderListener;import contentArea.SoundTool;import caurina.transitions.Tweener;class contentArea.PhotoBox extends MovieClip{	private var imageMc1:MovieClip;	private var imageMc2:MovieClip;	private var currentMc:String;	// holderMc is an empty mc already on 	private var holderMc:MovieClip  // stage (to be behind the blk frame)	private var panner:ImagePanner;	private var currentPath:String;	private var oldPath:String;		// transition speeds	private var _showTime:Number		= 5.9;	private var _transtionSpeed:Number  = 1.4;		public function PhotoBox()	{			imageMc1 = holderMc.createEmptyMovieClip('imageMc1', 0);		imageMc2 = holderMc.createEmptyMovieClip('imageMc2', 1);						imageMc1._x = imageMc2._x = 2;		imageMc1._y = imageMc2._y = 4;				currentMc = '1';	}		public function loadImage ( $path:String,		 						$pan:String,								$link:String,		 						$cbObj:Object,								$cbFunc:String ):Void	{		if( $path != currentPath )		{			var mc:MovieClip = getCurrentMc ();			mc._alpha = 0;			setReleaseFunctionality( mc, $link );			var listener = new ImageLoaderListener();			listener.setCallBack(this, 'imageLoadedCallBack', [$pan,$cbObj,$cbFunc] );					var movieClipLoader:MovieClipLoader = new MovieClipLoader();			movieClipLoader.addListener(listener);			movieClipLoader.loadClip($path, mc );			mc.loadedPath = $path;			oldPath = currentPath;			currentPath = $path;		}	}		private function setReleaseFunctionality ( $mc:MovieClip,		 									   $link:String  ):Void	{		// If there is a link, then set the release functionality		var mc:MovieClip = $mc._parent;		if( $link != null ) 		{		   mc.link = $link;		   mc.onRelease = function()			{				getURL(this.link, '_self');			}		}						// Other wise, remove any "onRelease" that is still in place		else		{			mc.onRelease = null;		}	}		public function imageLoadedCallBack( $pan:String,										 $cbObj:Object,										 $cbFunc:String ): Void	{		Tweener.addTween( getCurrentMc(), {_alpha:100, time:_transtionSpeed, transition:"linear"} );		if($pan != undefined)		{			panner.panMc(getCurrentMc(), $pan,$cbObj,$cbFunc);		}else{			panner.panMc(getCurrentMc(), '', $cbObj,$cbFunc);		}				toggleMcs();	}		private function toggleMcs (  ):Void	{			currentMc = (currentMc == '1')? '2' : '1' ;		imageMc1.swapDepths(imageMc2);		var ext:String = oldPath.split('.')[1];				var soundTool:SoundTool = new SoundTool();		soundTool.setVolume(100);		if( ext == "swf" || ext =="flv" )		{			// The stop Movie is set in the .fla holding the flash video			soundTool.setCallBacks( getCurrentMc(), 'stopMovie' );			soundTool.fadeOutSound( getCurrentMc() );		}	}		// Called by contentArea.Content.as	public function drawMaskSquare ( $wid:Number, $tal:Number ):Void	{		var maskMc = this.createEmptyMovieClip('maskMc1', 11);				var wid:Number = $wid;//277;		var tal:Number = $tal;//316;		var x:Number = 2;		var y:Number = 4;		//with ( maskMc)		//{		//	beginFill(0xFFFFFF, 100);		//	moveTo( x, y );		//	lineTo( wid + x, y);		//	lineTo( wid + x, tal + y );		//	lineTo( x, tal + y );		//	lineTo( x, y );		//	endFill();		//}        //		//holderMc.setMask(maskMc);		panner = new ImagePanner(maskMc);		panner.setDisplayTime( _showTime );	}		// ______________________________________________________________ Show (fade in)	// Called by ClickHandler.as	public function show (  ):Void	{		this._visible = true;		this._alpha = 0;		Tweener.addTween( this, {_alpha:100, time:_transtionSpeed, transition:"linear"} );	}   		//-------- Getters and Setters ------------------------//		private function getCurrentMc (  ):MovieClip{ return this['imageMc' + currentMc]; };	public function setShowTime 		( $val:Number ):Void{ _showTime 		= $val; };	public function setTransitionSpeed ( $val:Number ):Void{ _transtionSpeed 	= $val; };}