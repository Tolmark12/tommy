// Custom classes in the about section:// contentArea.PhotoBox.as - to slide the photo to the left on the first clickimport contentArea.Contentimport InteractiveContent;import contentArea.PhotoBox_about;import ClickHandler;import SWFAddress;class Doc_about extends Doc_BASE{	private var contentCon:Content;	private var interactiveCon:InteractiveContent;	private var navMc:MovieClip;		public function Doc_about( $rootMc:MovieClip )	{		super( $rootMc );		// Init the various movie clips and set their respective depths		navMc = rootMc.createEmptyMovieClip("navMc", 5008);		var altBaubleMc:MovieClip = rootMc.createEmptyMovieClip('altBaubleMc', 5009);		rootMc.photoFrame.swapDepths(5010)		rootMc.baubleHolder.swapDepths(5011);						// Control for managin the text and the images		contentCon = new Content( rootMc.photoFrame, rootMc.textMc, PathFinder.getImagePath() );				// Set the click handler connections		ClickHandler.setContentArea( contentCon );				// Inits the Side nav and the baubles		interactiveCon = new InteractiveContent( navMc, rootMc.baubleHolder, altBaubleMc, this  );		ClickHandler.setBaubleHolder( interactiveCon.getBaubleCon() );	}		public function xmlLoaded ( $xmlObj:Object ):Void	{		super.xmlLoaded( $xmlObj );		interactiveCon.setXmlInfo( $xmlObj, navMc );		contentCon.setImageBoxSize( Number($xmlObj.globals.imageBoxWidth),			 						Number($xmlObj.globals.imageBoxHeight) );				contentCon.loadImages( $xmlObj.globals, true );				// For the browser URL functionality		SWFAddress.onChange = function() 		{			ClickHandler.handleUrlChange( SWFAddress.getValue() )		}	}		// Send list of mask mcs to the bauble control	// Called from the stage	public function registerBaubleMasks ( $ar:Array ):Void	{		interactiveCon.registerBaubleMasks( $ar )	}}